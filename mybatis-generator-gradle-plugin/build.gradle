plugins {
    id "com.gradle.plugin-publish" version "0.10.1"
    id 'java-gradle-plugin'
    id 'groovy'
}

apply plugin: 'groovy'
apply plugin: 'idea'
apply plugin: "com.gradle.plugin-publish"

description = 'mybatis-generator-gradle-plugin'

dependencies {

    compile gradleApi()
    compile localGroovy()
    testCompile 'org.mybatis:mybatis:3.5.2'
    testCompile "org.testcontainers:spock:1.13.0"
    testImplementation 'org.spockframework:spock-core:1.3-groovy-2.5'
    
}

gradlePlugin {
    // Define the plugin
    plugins {
        MybatisGenerator {
            id = 'org.chance.gradle.MybatisGenerator'
            implementationClass = 'org.chance.gradle.MybatisGeneratorPlugin'
        }
    }
}

sourceSets {
    functionalTest {
    }
}

gradlePlugin.testSourceSets(sourceSets.functionalTest)
configurations.functionalTestImplementation.extendsFrom(configurations.testImplementation)

// Add a task to run the functional tests
task functionalTest(type: Test) {
    testClassesDirs = sourceSets.functionalTest.output.classesDirs
    classpath = sourceSets.functionalTest.runtimeClasspath
}

check {
    // Run the functional tests as part of `check`
    dependsOn(tasks.functionalTest)
}


pluginBundle {
    website = 'https://github.com/catchance/mybatis-generator.git'
    vcsUrl = 'https://github.com/catchance/mybatis-generator.git'
    description = "${project.description}"
    tags = ['mybatis', 'generator']

    plugins {
        MybatisGenerator {
            displayName = 'Mybatis Gradle Generator Plugin'
        }
    }
}

